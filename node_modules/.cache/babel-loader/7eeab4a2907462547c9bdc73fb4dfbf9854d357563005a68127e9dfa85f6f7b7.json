{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useNavigate}from'react-router-dom';import{AuthContext}from'../contexts/AuthContext';import{authAPI}from'../api/apiService';import logo from'../assets/rightlogo.png';import'../styles/Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const generateCaptcha=()=>{// Random captcha generation\nconst chars='abcdefghijklmnopqrstuvwxyz0123456789';let captcha='';for(let i=0;i<5;i++){captcha+=chars.charAt(Math.floor(Math.random()*chars.length));}return captcha;};const Login=()=>{const{login}=useContext(AuthContext);const[userName,setUserName]=useState('');const[password,setPassword]=useState('');const[loginType,setLoginType]=useState('official');// 'official', 'fpo', 'employee', 'farmer'\nconst[captcha,setCaptcha]=useState('');const[captchaValue,setCaptchaValue]=useState(generateCaptcha());const[showPassword,setShowPassword]=useState(false);const[error,setError]=useState('');const[loading,setLoading]=useState(false);const[welcomeMessage,setWelcomeMessage]=useState('');const navigate=useNavigate();// Welcome messages that will randomly refresh\nconst welcomeMessages=[\"Welcome to DATE Digital Agristack! 🌾\",\"Empowering Indian Agriculture Today! 🚀\",\"Digital Solutions for Modern Farming! 💡\",\"Transforming Agriculture with Technology! 🌱\",\"Building a Sustainable Agricultural Future! 🌍\",\"Smart Farming, Smart India! 🇮🇳\",\"Innovation Meets Agriculture! ⚡\",\"Growing Together, Growing Stronger! 🌿\"];// Helper to render current date like reference header\nconst getCurrentDate=()=>{const now=new Date();const options={weekday:'long',year:'numeric',month:'long',day:'numeric'};return now.toLocaleDateString('en-US',options);};// Function to get random welcome message\nconst getRandomWelcomeMessage=()=>{const randomIndex=Math.floor(Math.random()*welcomeMessages.length);return welcomeMessages[randomIndex];};// Update welcome message every 5 seconds\nuseEffect(()=>{setWelcomeMessage(getRandomWelcomeMessage());const interval=setInterval(()=>{setWelcomeMessage(getRandomWelcomeMessage());},5000);return()=>clearInterval(interval);},[]);const handleLoginType=type=>{setLoginType(type);setError('');setCaptcha('');setCaptchaValue(generateCaptcha());};const handleRefreshCaptcha=()=>{setCaptchaValue(generateCaptcha());setCaptcha('');};const handleSubmit=async e=>{e.preventDefault();setError('');setLoading(true);if(captcha.trim().toLowerCase()!==captchaValue.toLowerCase()){setError('Captcha does not match.');setLoading(false);setCaptchaValue(generateCaptcha());setCaptcha('');return;}try{var _response$data,_response$data2;// Backend expects userName\nconst loginData={userName,password};const response=await authAPI.login(loginData);console.log('Login - Full login response:',response);console.log('Login - Login response data keys:',Object.keys(response||{}));// Accept multiple possible token field names\nconst token=response.token||response.jwt||response.accessToken||((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.token)||localStorage.getItem('token');if(token){localStorage.setItem('token',token);}// Extract user data from login response\nconst userData=response.user||((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.user)||response.data;console.log('Login - User data from login response:',userData);if(userData){var _response$data3,_user$role,_user$role$toUpperCas,_user$role$toUpperCas2,_user$role$toUpperCas3,_user$role2,_user$role3,_user$role4,_user$role4$toUpperCa,_user$role4$toUpperCa2,_user$role4$toUpperCa3;const user={userName:userData.userName||userName,name:userData.name,email:userData.email,role:userData.role,forcePasswordChange:response.forcePasswordChange||((_response$data3=response.data)===null||_response$data3===void 0?void 0:_response$data3.forcePasswordChange)||false,status:userData.status};// For users with temporary passwords, force password change\nif(password.includes('Temp@')){user.forcePasswordChange=true;console.log('Login - Detected temporary password, forcing password change');}console.log('Login - User data constructed:',user);console.log('Login - User role from login response:',userData.role);login(user,token);// Check if user needs to change password (first time login with temp password)\nconsole.log('Login - Checking forcePasswordChange:',user.forcePasswordChange);console.log('Login - Password contains Temp@:',password.includes('Temp@'));if(user.forcePasswordChange){console.log('Login - Redirecting to change password page');navigate('/change-password');return;}// Role-based navigation after password change or normal login\nconsole.log('Login - User role for navigation:',user.role);console.log('Login - User role (normalized):',(_user$role=user.role)===null||_user$role===void 0?void 0:(_user$role$toUpperCas=_user$role.toUpperCase)===null||_user$role$toUpperCas===void 0?void 0:(_user$role$toUpperCas2=_user$role$toUpperCas.call(_user$role))===null||_user$role$toUpperCas2===void 0?void 0:(_user$role$toUpperCas3=_user$role$toUpperCas2.trim)===null||_user$role$toUpperCas3===void 0?void 0:_user$role$toUpperCas3.call(_user$role$toUpperCas2));console.log('Login - User role type:',typeof user.role);console.log('Login - User role length:',(_user$role2=user.role)===null||_user$role2===void 0?void 0:_user$role2.length);console.log('Login - User role includes spaces:',(_user$role3=user.role)===null||_user$role3===void 0?void 0:_user$role3.includes(' '));const normalizedRole=((_user$role4=user.role)===null||_user$role4===void 0?void 0:(_user$role4$toUpperCa=_user$role4.toUpperCase)===null||_user$role4$toUpperCa===void 0?void 0:(_user$role4$toUpperCa2=_user$role4$toUpperCa.call(_user$role4))===null||_user$role4$toUpperCa2===void 0?void 0:(_user$role4$toUpperCa3=_user$role4$toUpperCa2.trim)===null||_user$role4$toUpperCa3===void 0?void 0:_user$role4$toUpperCa3.call(_user$role4$toUpperCa2))||'';console.log('Login - Normalized role:',normalizedRole);console.log('Login - Normalized role === ADMIN:',normalizedRole==='ADMIN');console.log('Login - Normalized role === SUPER_ADMIN:',normalizedRole==='SUPER_ADMIN');console.log('Login - Normalized role === EMPLOYEE:',normalizedRole==='EMPLOYEE');if(normalizedRole==='SUPER_ADMIN'){console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');navigate('/super-admin/dashboard');}else if(normalizedRole==='ADMIN'){console.log('Login - Redirecting ADMIN to /admin/dashboard');navigate('/admin/dashboard');}else if(normalizedRole==='EMPLOYEE'){console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');navigate('/employee/dashboard');}else{console.log('Login - Redirecting FARMER to /dashboard');navigate('/dashboard');}}else{// Fallback to profile fetch if user data not in login response\ntry{var _user$role5,_user$role5$toUpperCa,_user$role5$toUpperCa2,_user$role5$toUpperCa3,_user$role6,_user$role7,_user$role8,_user$role8$toUpperCa,_user$role8$toUpperCa2,_user$role8$toUpperCa3;// Get user profile (cookie or bearer supported)\nconst profileData=await authAPI.getProfile();console.log('Login - Profile response data:',profileData);console.log('Login - Profile response data keys:',Object.keys(profileData||{}));const user={userName:profileData.userName||userName,name:profileData.name,email:profileData.email,role:profileData.role,forcePasswordChange:profileData.forcePasswordChange||false,status:profileData.status};// For users with temporary passwords, force password change\nif(password.includes('Temp@')){user.forcePasswordChange=true;console.log('Login - Detected temporary password, forcing password change');}console.log('Login - User data from profile:',user);console.log('Login - User role from profile:',profileData.role);login(user,token);// Check if user needs to change password (first time login with temp password)\nconsole.log('Login - Checking forcePasswordChange:',user.forcePasswordChange);console.log('Login - Password contains Temp@:',password.includes('Temp@'));if(user.forcePasswordChange){console.log('Login - Redirecting to change password page');navigate('/change-password');return;}// Role-based navigation after password change or normal login\nconsole.log('Login - User role for navigation:',user.role);console.log('Login - User role (normalized):',(_user$role5=user.role)===null||_user$role5===void 0?void 0:(_user$role5$toUpperCa=_user$role5.toUpperCase)===null||_user$role5$toUpperCa===void 0?void 0:(_user$role5$toUpperCa2=_user$role5$toUpperCa.call(_user$role5))===null||_user$role5$toUpperCa2===void 0?void 0:(_user$role5$toUpperCa3=_user$role5$toUpperCa2.trim)===null||_user$role5$toUpperCa3===void 0?void 0:_user$role5$toUpperCa3.call(_user$role5$toUpperCa2));console.log('Login - User role type:',typeof user.role);console.log('Login - User role length:',(_user$role6=user.role)===null||_user$role6===void 0?void 0:_user$role6.length);console.log('Login - User role includes spaces:',(_user$role7=user.role)===null||_user$role7===void 0?void 0:_user$role7.includes(' '));const normalizedRole=((_user$role8=user.role)===null||_user$role8===void 0?void 0:(_user$role8$toUpperCa=_user$role8.toUpperCase)===null||_user$role8$toUpperCa===void 0?void 0:(_user$role8$toUpperCa2=_user$role8$toUpperCa.call(_user$role8))===null||_user$role8$toUpperCa2===void 0?void 0:(_user$role8$toUpperCa3=_user$role8$toUpperCa2.trim)===null||_user$role8$toUpperCa3===void 0?void 0:_user$role8$toUpperCa3.call(_user$role8$toUpperCa2))||'';console.log('Login - Normalized role:',normalizedRole);console.log('Login - Normalized role === ADMIN:',normalizedRole==='ADMIN');console.log('Login - Normalized role === SUPER_ADMIN:',normalizedRole==='SUPER_ADMIN');console.log('Login - Normalized role === EMPLOYEE:',normalizedRole==='EMPLOYEE');if(normalizedRole==='SUPER_ADMIN'){console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');navigate('/super-admin/dashboard');}else if(normalizedRole==='ADMIN'){console.log('Login - Redirecting ADMIN to /admin/dashboard');navigate('/admin/dashboard');}else if(normalizedRole==='EMPLOYEE'){console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');navigate('/employee/dashboard');}else{console.log('Login - Redirecting FARMER to /dashboard');navigate('/dashboard');}}catch(profileErr){var _response$data4,_response$data5,_response$data6,_response$data7,_response$data8,_role,_role$toUpperCase,_role$toUpperCase$cal,_role$toUpperCase$cal2;console.log('Profile fetch failed, trying alternative methods');console.log('Profile error:',profileErr);// Try to get role from login response first\nlet role=(_response$data4=response.data)===null||_response$data4===void 0?void 0:_response$data4.role;let forcePasswordChange=((_response$data5=response.data)===null||_response$data5===void 0?void 0:_response$data5.forcePasswordChange)||false;// For users with temporary passwords, force password change\nif(password.includes('Temp@')){forcePasswordChange=true;console.log('Login - Detected temporary password, forcing password change');}// If role is not in login response, try to get it from the backend\nif(!role){try{console.log('Login - Trying to get role from /auth/me endpoint');const meResponse=await authAPI.getProfile();console.log('Login - /auth/me response:',meResponse);role=meResponse===null||meResponse===void 0?void 0:meResponse.role;console.log('Login - Role from /auth/me:',role);}catch(meErr){console.log('Login - /auth/me failed:',meErr);// Try another common endpoint\ntry{console.log('Login - Trying to get role from /api/auth/users/profile endpoint');const altProfileResponse=await authAPI.getProfile();console.log('Login - /api/auth/users/profile response:',altProfileResponse);role=altProfileResponse===null||altProfileResponse===void 0?void 0:altProfileResponse.role;console.log('Login - Role from /api/auth/users/profile:',role);}catch(altErr){console.log('Login - /api/auth/users/profile failed:',altErr);}}}// If still no role, try to determine from username or use a default\nif(!role){console.log('Login - No role found, trying to determine from username');console.log('Login - Username being checked:',userName);// Check if username contains admin indicators\nconst lowerUserName=userName.toLowerCase();// Specific username mapping for known accounts\nconst superAdminUsernames=['projecthinfintiy@12.in','superadmin@hinfinity.in'];const adminUsernames=['karthik.m@hinfinity.in','admin@hinfinity.in'];const employeeUsernames=['employee@hinfinity.in','emp@hinfinity.in','testemployee@hinfinity.in','hari2912@gmail.com','harish134@gmail.com','employee2@hinfinity.in','test@employee.com'];console.log('Login - Checking against employee usernames:',employeeUsernames);console.log('Login - Username in employee list?',employeeUsernames.includes(userName));if(superAdminUsernames.includes(userName)){role='SUPER_ADMIN';console.log('Login - Determined role as SUPER_ADMIN from specific username mapping');}else if(adminUsernames.includes(userName)){role='ADMIN';console.log('Login - Determined role as ADMIN from specific username mapping');}else if(employeeUsernames.includes(userName)){role='EMPLOYEE';console.log('Login - Determined role as EMPLOYEE from specific username mapping');console.log('Login - Employee username detected:',userName);}else{// Default to FARMER for unknown usernames\nrole='FARMER';console.log('Login - Defaulting to FARMER role for unknown username');}}const user={userName:userName,name:((_response$data6=response.data)===null||_response$data6===void 0?void 0:_response$data6.name)||userName,email:((_response$data7=response.data)===null||_response$data7===void 0?void 0:_response$data7.email)||userName,role:role,forcePasswordChange:forcePasswordChange,status:((_response$data8=response.data)===null||_response$data8===void 0?void 0:_response$data8.status)||'ACTIVE'};console.log('Login - Fallback user data:',user);login(user,token);if(user.forcePasswordChange){console.log('Login - Fallback: Redirecting to change password page');navigate('/change-password');return;}const normalizedRole=((_role=role)===null||_role===void 0?void 0:(_role$toUpperCase=_role.toUpperCase)===null||_role$toUpperCase===void 0?void 0:(_role$toUpperCase$cal=_role$toUpperCase.call(_role))===null||_role$toUpperCase$cal===void 0?void 0:(_role$toUpperCase$cal2=_role$toUpperCase$cal.trim)===null||_role$toUpperCase$cal2===void 0?void 0:_role$toUpperCase$cal2.call(_role$toUpperCase$cal))||'';console.log('Login - Fallback: Normalized role:',normalizedRole);if(normalizedRole==='SUPER_ADMIN'){console.log('Login - Fallback: Redirecting SUPER_ADMIN to /super-admin/dashboard');navigate('/super-admin/dashboard');}else if(normalizedRole==='ADMIN'){console.log('Login - Fallback: Redirecting ADMIN to /admin/dashboard');navigate('/admin/dashboard');}else if(normalizedRole==='EMPLOYEE'){console.log('Login - Fallback: Redirecting EMPLOYEE to /employee/dashboard');navigate('/employee/dashboard');}else{console.log('Login - Fallback: Redirecting FARMER to /dashboard');navigate('/dashboard');}}}}catch(err){var _err$response,_err$response$data;console.error('Login error:',err);console.error('Login error response:',err.response);console.error('Login error message:',err.message);setError(\"Login failed: \".concat(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message||'Invalid credentials or server error.'));}finally{setLoading(false);}};const handleCreateAccount=()=>{if(loginType==='employee'){navigate('/register-employee',{state:{role:'EMPLOYEE'}});}else if(loginType==='farmer'){navigate('/register-farmer',{state:{role:'FARMER'}});}else if(loginType==='fpo'){navigate('/register-fpo',{state:{role:'FPO'}});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page-container minimalist\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"topbar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"topbar-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"topbar-left\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"DATE Logo\",className:\"topbar-logo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"topbar-date\",children:/*#__PURE__*/_jsx(\"span\",{className:\"date-text\",children:getCurrentDate()})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"topbar-welcome\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"welcome-header\",children:welcomeMessage})}),/*#__PURE__*/_jsxs(\"nav\",{className:\"topbar-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"topbar-btn\",onClick:()=>navigate('/'),children:\"Home\"}),/*#__PURE__*/_jsx(\"button\",{className:\"topbar-btn\",onClick:()=>navigate('/analytics'),children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{className:\"topbar-btn\",onClick:()=>navigate('/menu'),children:\"Menu\"}),/*#__PURE__*/_jsx(\"button\",{className:\"topbar-btn\",onClick:()=>navigate('/about'),children:\"About\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-wrapper\",children:[/*#__PURE__*/_jsxs(\"aside\",{className:\"agri-highlights\",\"aria-label\":\"Agriculture highlights\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"agri-title\",children:\"Transforming Indian Agriculture\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"agri-list\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"agri-emoji\",children:\"\\uD83C\\uDF3E\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"agri-point\",children:\"140+ million farmers connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agri-sub\",children:\"Digital access to schemes and services\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"agri-emoji\",children:\"\\uD83D\\uDCE1\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"agri-point\",children:\"Precision farming & AI insights\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agri-sub\",children:\"Crop monitoring, advisory, alerts\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"agri-emoji\",children:\"\\uD83D\\uDCA7\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"agri-point\",children:\"Water & soil intelligence\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agri-sub\",children:\"Smart irrigation and resource planning\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"agri-emoji\",children:\"\\uD83D\\uDCB0\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"agri-point\",children:\"Direct benefit transfers\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agri-sub\",children:\"Faster, transparent financial inclusion\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-brand\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"DATE Logo\",className:\"auth-logo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-title\",children:\"Digital Agristack Transaction Enterprises\"}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-subtitle\",children:\"Empowering Agricultural Excellence\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-tab \".concat(loginType==='official'?'active':''),onClick:()=>handleLoginType('official'),children:\"Official\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-tab \".concat(loginType==='fpo'?'active':''),onClick:()=>handleLoginType('fpo'),children:\"FPO\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-tab \".concat(loginType==='employee'?'active':''),onClick:()=>handleLoginType('employee'),children:\"Employee\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-tab \".concat(loginType==='farmer'?'active':''),onClick:()=>handleLoginType('farmer'),children:\"Farmer\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Insert Registered Mobile Number as Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userName,onChange:e=>setUserName(e.target.value),required:true,disabled:loading,placeholder:\"Enter username\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-password\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?\"text\":\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,disabled:loading,placeholder:\"Enter password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-eye\",onClick:()=>setShowPassword(!showPassword),children:\"\\uD83D\\uDC41\\uFE0F\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-links\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/forgot-password\",children:\"Forgot Password?\"}),/*#__PURE__*/_jsx(\"span\",{className:\"sep\",children:\"|\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/forgot-userid\",children:\"Forgot User ID?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-captcha\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Captcha\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-captcha-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-captcha-badge\",children:/*#__PURE__*/_jsx(\"span\",{children:captchaValue})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-refresh\",onClick:handleRefreshCaptcha,children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:captcha,onChange:e=>setCaptcha(e.target.value),placeholder:\"Enter Captcha\",className:\"auth-captcha-input\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-error\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-submit\",disabled:loading,children:loading?'Logging in...':'Log In'}),(loginType==='employee'||loginType==='farmer'||loginType==='fpo')&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"auth-secondary\",onClick:handleCreateAccount,children:\"Create New user Acount\"})]})]})]})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","AuthContext","authAPI","logo","jsx","_jsx","jsxs","_jsxs","generateCaptcha","chars","captcha","i","charAt","Math","floor","random","length","Login","login","userName","setUserName","password","setPassword","loginType","setLoginType","setCaptcha","captchaValue","setCaptchaValue","showPassword","setShowPassword","error","setError","loading","setLoading","welcomeMessage","setWelcomeMessage","navigate","welcomeMessages","getCurrentDate","now","Date","options","weekday","year","month","day","toLocaleDateString","getRandomWelcomeMessage","randomIndex","interval","setInterval","clearInterval","handleLoginType","type","handleRefreshCaptcha","handleSubmit","e","preventDefault","trim","toLowerCase","_response$data","_response$data2","loginData","response","console","log","Object","keys","token","jwt","accessToken","data","localStorage","getItem","setItem","userData","user","_response$data3","_user$role","_user$role$toUpperCas","_user$role$toUpperCas2","_user$role$toUpperCas3","_user$role2","_user$role3","_user$role4","_user$role4$toUpperCa","_user$role4$toUpperCa2","_user$role4$toUpperCa3","name","email","role","forcePasswordChange","status","includes","toUpperCase","call","normalizedRole","_user$role5","_user$role5$toUpperCa","_user$role5$toUpperCa2","_user$role5$toUpperCa3","_user$role6","_user$role7","_user$role8","_user$role8$toUpperCa","_user$role8$toUpperCa2","_user$role8$toUpperCa3","profileData","getProfile","profileErr","_response$data4","_response$data5","_response$data6","_response$data7","_response$data8","_role","_role$toUpperCase","_role$toUpperCase$cal","_role$toUpperCase$cal2","meResponse","meErr","altProfileResponse","altErr","lowerUserName","superAdminUsernames","adminUsernames","employeeUsernames","err","_err$response","_err$response$data","message","concat","handleCreateAccount","state","className","children","src","alt","onClick","onSubmit","value","onChange","target","required","disabled","placeholder","href"],"sources":["C:/karthik cc/date-frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { authAPI } from '../api/apiService';\r\nimport logo from '../assets/rightlogo.png';\r\nimport '../styles/Login.css';\r\n\r\nconst generateCaptcha = () => {\r\n  // Random captcha generation\r\n  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n  let captcha = '';\r\n  for (let i = 0; i < 5; i++) {\r\n    captcha += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return captcha;\r\n};\r\n\r\nconst Login = () => {\r\n  const { login } = useContext(AuthContext);\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginType, setLoginType] = useState('official'); // 'official', 'fpo', 'employee', 'farmer'\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [captchaValue, setCaptchaValue] = useState(generateCaptcha());\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [welcomeMessage, setWelcomeMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Welcome messages that will randomly refresh\r\n  const welcomeMessages = [\r\n    \"Welcome to DATE Digital Agristack! 🌾\",\r\n    \"Empowering Indian Agriculture Today! 🚀\",\r\n    \"Digital Solutions for Modern Farming! 💡\",\r\n    \"Transforming Agriculture with Technology! 🌱\",\r\n    \"Building a Sustainable Agricultural Future! 🌍\",\r\n    \"Smart Farming, Smart India! 🇮🇳\",\r\n    \"Innovation Meets Agriculture! ⚡\",\r\n    \"Growing Together, Growing Stronger! 🌿\"\r\n  ];\r\n\r\n  // Helper to render current date like reference header\r\n  const getCurrentDate = () => {\r\n    const now = new Date();\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    return now.toLocaleDateString('en-US', options);\r\n  };\r\n\r\n  // Function to get random welcome message\r\n  const getRandomWelcomeMessage = () => {\r\n    const randomIndex = Math.floor(Math.random() * welcomeMessages.length);\r\n    return welcomeMessages[randomIndex];\r\n  };\r\n\r\n  // Update welcome message every 5 seconds\r\n  useEffect(() => {\r\n    setWelcomeMessage(getRandomWelcomeMessage());\r\n    \r\n    const interval = setInterval(() => {\r\n      setWelcomeMessage(getRandomWelcomeMessage());\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleLoginType = (type) => {\r\n    setLoginType(type);\r\n    setError('');\r\n    setCaptcha('');\r\n    setCaptchaValue(generateCaptcha());\r\n  };\r\n\r\n  const handleRefreshCaptcha = () => {\r\n    setCaptchaValue(generateCaptcha());\r\n    setCaptcha('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    if (captcha.trim().toLowerCase() !== captchaValue.toLowerCase()) {\r\n      setError('Captcha does not match.');\r\n      setLoading(false);\r\n      setCaptchaValue(generateCaptcha());\r\n      setCaptcha('');\r\n      return;\r\n    }\r\n    try {\r\n      // Backend expects userName\r\n      const loginData = { userName, password };\r\n      const response = await authAPI.login(loginData);\r\n      console.log('Login - Full login response:', response);\r\n      console.log('Login - Login response data keys:', Object.keys(response || {}));\r\n      // Accept multiple possible token field names\r\n      const token = response.token || response.jwt || response.accessToken || response.data?.token || localStorage.getItem('token');\r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n      }\r\n      \r\n      // Extract user data from login response\r\n      const userData = response.user || response.data?.user || response.data;\r\n      console.log('Login - User data from login response:', userData);\r\n      \r\n      if (userData) {\r\n        const user = {\r\n          userName: userData.userName || userName,\r\n          name: userData.name,\r\n          email: userData.email,\r\n          role: userData.role,\r\n          forcePasswordChange: response.forcePasswordChange || response.data?.forcePasswordChange || false,\r\n          status: userData.status\r\n        };\r\n        \r\n        // For users with temporary passwords, force password change\r\n        if (password.includes('Temp@')) {\r\n          user.forcePasswordChange = true;\r\n          console.log('Login - Detected temporary password, forcing password change');\r\n        }\r\n        \r\n        console.log('Login - User data constructed:', user);\r\n        console.log('Login - User role from login response:', userData.role);\r\n        login(user, token);\r\n        \r\n        // Check if user needs to change password (first time login with temp password)\r\n        console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\r\n        console.log('Login - Password contains Temp@:', password.includes('Temp@'));\r\n        \r\n        if (user.forcePasswordChange) {\r\n          console.log('Login - Redirecting to change password page');\r\n          navigate('/change-password');\r\n          return;\r\n        }\r\n        \r\n        // Role-based navigation after password change or normal login\r\n        console.log('Login - User role for navigation:', user.role);\r\n        console.log('Login - User role (normalized):', user.role?.toUpperCase?.()?.trim?.());\r\n        console.log('Login - User role type:', typeof user.role);\r\n        console.log('Login - User role length:', user.role?.length);\r\n        console.log('Login - User role includes spaces:', user.role?.includes(' '));\r\n        \r\n        const normalizedRole = user.role?.toUpperCase?.()?.trim?.() || '';\r\n        console.log('Login - Normalized role:', normalizedRole);\r\n        console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\r\n        console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\r\n        console.log('Login - Normalized role === EMPLOYEE:', normalizedRole === 'EMPLOYEE');\r\n        \r\n        if (normalizedRole === 'SUPER_ADMIN') {\r\n          console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n          navigate('/super-admin/dashboard');\r\n        } else if (normalizedRole === 'ADMIN') {\r\n          console.log('Login - Redirecting ADMIN to /admin/dashboard');\r\n          navigate('/admin/dashboard');\r\n        } else if (normalizedRole === 'EMPLOYEE') {\r\n          console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\r\n          navigate('/employee/dashboard');\r\n        } else {\r\n          console.log('Login - Redirecting FARMER to /dashboard');\r\n          navigate('/dashboard');\r\n        }\r\n      } else {\r\n        // Fallback to profile fetch if user data not in login response\r\n        try {\r\n          // Get user profile (cookie or bearer supported)\r\n          const profileData = await authAPI.getProfile();\r\n          console.log('Login - Profile response data:', profileData);\r\n          console.log('Login - Profile response data keys:', Object.keys(profileData || {}));\r\n          const user = {\r\n            userName: profileData.userName || userName,\r\n            name: profileData.name,\r\n            email: profileData.email,\r\n            role: profileData.role,\r\n            forcePasswordChange: profileData.forcePasswordChange || false,\r\n            status: profileData.status\r\n          };\r\n          \r\n          // For users with temporary passwords, force password change\r\n          if (password.includes('Temp@')) {\r\n            user.forcePasswordChange = true;\r\n            console.log('Login - Detected temporary password, forcing password change');\r\n          }\r\n          \r\n          console.log('Login - User data from profile:', user);\r\n          console.log('Login - User role from profile:', profileData.role);\r\n          login(user, token);\r\n          \r\n          // Check if user needs to change password (first time login with temp password)\r\n          console.log('Login - Checking forcePasswordChange:', user.forcePasswordChange);\r\n          console.log('Login - Password contains Temp@:', password.includes('Temp@'));\r\n          \r\n          if (user.forcePasswordChange) {\r\n            console.log('Login - Redirecting to change password page');\r\n            navigate('/change-password');\r\n            return;\r\n          }\r\n          \r\n          // Role-based navigation after password change or normal login\r\n          console.log('Login - User role for navigation:', user.role);\r\n          console.log('Login - User role (normalized):', user.role?.toUpperCase?.()?.trim?.());\r\n          console.log('Login - User role type:', typeof user.role);\r\n          console.log('Login - User role length:', user.role?.length);\r\n          console.log('Login - User role includes spaces:', user.role?.includes(' '));\r\n          \r\n          const normalizedRole = user.role?.toUpperCase?.()?.trim?.() || '';\r\n          console.log('Login - Normalized role:', normalizedRole);\r\n          console.log('Login - Normalized role === ADMIN:', normalizedRole === 'ADMIN');\r\n          console.log('Login - Normalized role === SUPER_ADMIN:', normalizedRole === 'SUPER_ADMIN');\r\n          console.log('Login - Normalized role === EMPLOYEE:', normalizedRole === 'EMPLOYEE');\r\n          \r\n          if (normalizedRole === 'SUPER_ADMIN') {\r\n            console.log('Login - Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n            navigate('/super-admin/dashboard');\r\n          } else if (normalizedRole === 'ADMIN') {\r\n            console.log('Login - Redirecting ADMIN to /admin/dashboard');\r\n            navigate('/admin/dashboard');\r\n          } else if (normalizedRole === 'EMPLOYEE') {\r\n            console.log('Login - Redirecting EMPLOYEE to /employee/dashboard');\r\n            navigate('/employee/dashboard');\r\n          } else {\r\n            console.log('Login - Redirecting FARMER to /dashboard');\r\n            navigate('/dashboard');\r\n          }\r\n        } catch (profileErr) {\r\n          console.log('Profile fetch failed, trying alternative methods');\r\n          console.log('Profile error:', profileErr);\r\n          \r\n          // Try to get role from login response first\r\n          let role = response.data?.role;\r\n          let forcePasswordChange = response.data?.forcePasswordChange || false;\r\n          \r\n          // For users with temporary passwords, force password change\r\n          if (password.includes('Temp@')) {\r\n            forcePasswordChange = true;\r\n            console.log('Login - Detected temporary password, forcing password change');\r\n          }\r\n          \r\n          // If role is not in login response, try to get it from the backend\r\n          if (!role) {\r\n            try {\r\n              console.log('Login - Trying to get role from /auth/me endpoint');\r\n              const meResponse = await authAPI.getProfile();\r\n              console.log('Login - /auth/me response:', meResponse);\r\n              role = meResponse?.role;\r\n              console.log('Login - Role from /auth/me:', role);\r\n            } catch (meErr) {\r\n              console.log('Login - /auth/me failed:', meErr);\r\n              \r\n              // Try another common endpoint\r\n              try {\r\n                console.log('Login - Trying to get role from /api/auth/users/profile endpoint');\r\n                const altProfileResponse = await authAPI.getProfile();\r\n                console.log('Login - /api/auth/users/profile response:', altProfileResponse);\r\n                role = altProfileResponse?.role;\r\n                console.log('Login - Role from /api/auth/users/profile:', role);\r\n              } catch (altErr) {\r\n                console.log('Login - /api/auth/users/profile failed:', altErr);\r\n              }\r\n            }\r\n          }\r\n          \r\n          // If still no role, try to determine from username or use a default\r\n          if (!role) {\r\n            console.log('Login - No role found, trying to determine from username');\r\n            console.log('Login - Username being checked:', userName);\r\n            // Check if username contains admin indicators\r\n            const lowerUserName = userName.toLowerCase();\r\n            \r\n            // Specific username mapping for known accounts\r\n            const superAdminUsernames = [\r\n              'projecthinfintiy@12.in',\r\n              'superadmin@hinfinity.in'\r\n            ];\r\n            \r\n            const adminUsernames = [\r\n              'karthik.m@hinfinity.in',\r\n              'admin@hinfinity.in'\r\n            ];\r\n            \r\n            const employeeUsernames = [\r\n              'employee@hinfinity.in',\r\n              'emp@hinfinity.in',\r\n              'testemployee@hinfinity.in',\r\n              'hari2912@gmail.com',\r\n              'harish134@gmail.com',\r\n              'employee2@hinfinity.in',\r\n              'test@employee.com'\r\n            ];\r\n            \r\n            console.log('Login - Checking against employee usernames:', employeeUsernames);\r\n            console.log('Login - Username in employee list?', employeeUsernames.includes(userName));\r\n            \r\n            if (superAdminUsernames.includes(userName)) {\r\n              role = 'SUPER_ADMIN';\r\n              console.log('Login - Determined role as SUPER_ADMIN from specific username mapping');\r\n            } else if (adminUsernames.includes(userName)) {\r\n              role = 'ADMIN';\r\n              console.log('Login - Determined role as ADMIN from specific username mapping');\r\n            } else if (employeeUsernames.includes(userName)) {\r\n              role = 'EMPLOYEE';\r\n              console.log('Login - Determined role as EMPLOYEE from specific username mapping');\r\n              console.log('Login - Employee username detected:', userName);\r\n            } else {\r\n              // Default to FARMER for unknown usernames\r\n              role = 'FARMER';\r\n              console.log('Login - Defaulting to FARMER role for unknown username');\r\n            }\r\n          }\r\n          \r\n          const user = {\r\n            userName: userName,\r\n            name: response.data?.name || userName,\r\n            email: response.data?.email || userName,\r\n            role: role,\r\n            forcePasswordChange: forcePasswordChange,\r\n            status: response.data?.status || 'ACTIVE'\r\n          };\r\n          \r\n          console.log('Login - Fallback user data:', user);\r\n          login(user, token);\r\n          \r\n          if (user.forcePasswordChange) {\r\n            console.log('Login - Fallback: Redirecting to change password page');\r\n            navigate('/change-password');\r\n            return;\r\n          }\r\n          \r\n          const normalizedRole = role?.toUpperCase?.()?.trim?.() || '';\r\n          console.log('Login - Fallback: Normalized role:', normalizedRole);\r\n          \r\n          if (normalizedRole === 'SUPER_ADMIN') {\r\n            console.log('Login - Fallback: Redirecting SUPER_ADMIN to /super-admin/dashboard');\r\n            navigate('/super-admin/dashboard');\r\n          } else if (normalizedRole === 'ADMIN') {\r\n            console.log('Login - Fallback: Redirecting ADMIN to /admin/dashboard');\r\n            navigate('/admin/dashboard');\r\n          } else if (normalizedRole === 'EMPLOYEE') {\r\n            console.log('Login - Fallback: Redirecting EMPLOYEE to /employee/dashboard');\r\n            navigate('/employee/dashboard');\r\n          } else {\r\n            console.log('Login - Fallback: Redirecting FARMER to /dashboard');\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      console.error('Login error response:', err.response);\r\n      console.error('Login error message:', err.message);\r\n      setError(`Login failed: ${err.response?.data?.message || err.message || 'Invalid credentials or server error.'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateAccount = () => {\r\n    if (loginType === 'employee') {\r\n      navigate('/register-employee', { state: { role: 'EMPLOYEE' } });\r\n    } else if (loginType === 'farmer') {\r\n      navigate('/register-farmer', { state: { role: 'FARMER' } });\r\n    } else if (loginType === 'fpo') {\r\n      navigate('/register-fpo', { state: { role: 'FPO' } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page-container minimalist\">\r\n      {/* Top Bar */}\r\n      <header className=\"topbar\">\r\n        <div className=\"topbar-content\">\r\n          <div className=\"topbar-left\">\r\n            <img src={logo} alt=\"DATE Logo\" className=\"topbar-logo\" />\r\n            <div className=\"topbar-date\">\r\n              <span className=\"date-text\">{getCurrentDate()}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Welcome Greeting in Center */}\r\n          <div className=\"topbar-welcome\">\r\n            <h2 className=\"welcome-header\">{welcomeMessage}</h2>\r\n          </div>\r\n          \r\n                      <nav className=\"topbar-menu\">\r\n              <button className=\"topbar-btn\" onClick={() => navigate('/')}>Home</button>\r\n              <button className=\"topbar-btn\" onClick={() => navigate('/analytics')}>Dashboard</button>\r\n              <button className=\"topbar-btn\" onClick={() => navigate('/menu')}>Menu</button>\r\n              <button className=\"topbar-btn\" onClick={() => navigate('/about')}>About</button>\r\n            </nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"auth-wrapper\">\r\n        <aside className=\"agri-highlights\" aria-label=\"Agriculture highlights\">\r\n          <h2 className=\"agri-title\">Transforming Indian Agriculture</h2>\r\n          <ul className=\"agri-list\">\r\n            <li>\r\n              <span className=\"agri-emoji\">🌾</span>\r\n              <div>\r\n                <div className=\"agri-point\">140+ million farmers connected</div>\r\n                <div className=\"agri-sub\">Digital access to schemes and services</div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <span className=\"agri-emoji\">📡</span>\r\n              <div>\r\n                <div className=\"agri-point\">Precision farming & AI insights</div>\r\n                <div className=\"agri-sub\">Crop monitoring, advisory, alerts</div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <span className=\"agri-emoji\">💧</span>\r\n              <div>\r\n                <div className=\"agri-point\">Water & soil intelligence</div>\r\n                <div className=\"agri-sub\">Smart irrigation and resource planning</div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <span className=\"agri-emoji\">💰</span>\r\n              <div>\r\n                <div className=\"agri-point\">Direct benefit transfers</div>\r\n                <div className=\"agri-sub\">Faster, transparent financial inclusion</div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </aside>\r\n        <div className=\"auth-card\">\r\n          <div className=\"auth-brand\">\r\n            <img src={logo} alt=\"DATE Logo\" className=\"auth-logo\" />\r\n            <div className=\"auth-title\">Digital Agristack Transaction Enterprises</div>\r\n            <div className=\"auth-subtitle\">Empowering Agricultural Excellence</div>\r\n          </div>\r\n\r\n          <div className=\"auth-tabs\">\r\n            <button \r\n              type=\"button\"\r\n              className={`auth-tab ${loginType === 'official' ? 'active' : ''}`}\r\n              onClick={() => handleLoginType('official')}\r\n            >Official</button>\r\n            <button \r\n              type=\"button\"\r\n              className={`auth-tab ${loginType === 'fpo' ? 'active' : ''}`}\r\n              onClick={() => handleLoginType('fpo')}\r\n            >FPO</button>\r\n            <button \r\n              type=\"button\"\r\n              className={`auth-tab ${loginType === 'employee' ? 'active' : ''}`}\r\n              onClick={() => handleLoginType('employee')}\r\n            >Employee</button>\r\n            <button \r\n              type=\"button\"\r\n              className={`auth-tab ${loginType === 'farmer' ? 'active' : ''}`}\r\n              onClick={() => handleLoginType('farmer')}\r\n            >Farmer</button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"auth-form\">\r\n              {/* Username Field */}\r\n              <div className=\"auth-field\">\r\n                <label>Insert Registered Mobile Number as Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={userName}\r\n                  onChange={e => setUserName(e.target.value)}\r\n                  required\r\n                  disabled={loading}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </div>\r\n\r\n              {/* Password Field */}\r\n              <div className=\"auth-field\">\r\n                <label>Enter password</label>\r\n                <div className=\"auth-password\">\r\n                  <input\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                    disabled={loading}\r\n                    placeholder=\"Enter password\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"auth-eye\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                  >\r\n                    👁️\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Forgot Password Link */}\r\n              <div className=\"auth-links\">\r\n                <a href=\"/forgot-password\">Forgot Password?</a>\r\n                <span className=\"sep\">|</span>\r\n                <a href=\"/forgot-userid\">Forgot User ID?</a>\r\n              </div>\r\n\r\n              {/* Captcha Section */}\r\n              <div className=\"auth-captcha\">\r\n                <label>Captcha</label>\r\n                <div className=\"auth-captcha-row\">\r\n                  <div className=\"auth-captcha-badge\">\r\n                    <span>{captchaValue}</span>\r\n                  </div>\r\n                  <button type=\"button\" className=\"auth-refresh\" onClick={handleRefreshCaptcha}>\r\n                    🔄\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={captcha}\r\n                    onChange={e => setCaptcha(e.target.value)}\r\n                    placeholder=\"Enter Captcha\"\r\n                    className=\"auth-captcha-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {error && <div className=\"auth-error\">{error}</div>}\r\n              \r\n              <div className=\"auth-actions\">\r\n                <button type=\"submit\" className=\"auth-submit\" disabled={loading}>\r\n                  {loading ? 'Logging in...' : 'Log In'}\r\n                </button>\r\n                {(loginType === 'employee' || loginType === 'farmer' || loginType === 'fpo') && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"auth-secondary\"\r\n                    onClick={handleCreateAccount}\r\n                  >\r\n                    Create New user Acount\r\n                  </button>\r\n                )}\r\n              </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}