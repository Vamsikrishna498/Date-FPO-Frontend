{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Vamsi\\\\DATE Project Version 1 Code\\\\version-1-frontend\\\\src\\\\components\\\\FPOCrops.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fpoAPI } from '../api/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FPOCrops = ({\n  fpoId\n}) => {\n  _s();\n  const [crops, setCrops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadCrops();\n  }, [fpoId]);\n  const loadCrops = async () => {\n    try {\n      setLoading(true);\n      const response = await fpoAPI.getFPOCrops(fpoId);\n      setCrops(response);\n    } catch (err) {\n      setError('Failed to load crops');\n      console.error('Error loading crops:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading crops...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fpo-crops\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Crops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Add Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crops-list\",\n      children: crops.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"No crops found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : crops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: crop.cropName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"variety\",\n            children: [\"Variety: \", crop.variety]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"area\",\n            children: [\"Area: \", crop.area, \" acres\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"season\",\n            children: [\"Season: \", crop.season]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status\",\n            children: [\"Status: \", crop.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-sm\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning btn-sm\",\n            children: \"Update Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, crop.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(FPOCrops, \"KY/NfoL2IWpWzlFbXnBxSVubUHg=\");\n_c = FPOCrops;\nexport default FPOCrops;\nvar _c;\n$RefreshReg$(_c, \"FPOCrops\");","map":{"version":3,"names":["React","useState","useEffect","fpoAPI","jsxDEV","_jsxDEV","FPOCrops","fpoId","_s","crops","setCrops","loading","setLoading","error","setError","loadCrops","response","getFPOCrops","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","crop","cropName","variety","area","season","status","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Vamsi/DATE Project Version 1 Code/version-1-frontend/src/components/FPOCrops.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fpoAPI } from '../api/apiService';\n\nconst FPOCrops = ({ fpoId }) => {\n  const [crops, setCrops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadCrops();\n  }, [fpoId]);\n\n  const loadCrops = async () => {\n    try {\n      setLoading(true);\n      const response = await fpoAPI.getFPOCrops(fpoId);\n      setCrops(response);\n    } catch (err) {\n      setError('Failed to load crops');\n      console.error('Error loading crops:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading crops...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"fpo-crops\">\n      <div className=\"section-header\">\n        <h3>Crops</h3>\n        <button className=\"btn btn-primary\">Add Crop</button>\n      </div>\n      \n      <div className=\"crops-list\">\n        {crops.length === 0 ? (\n          <div className=\"no-data\">No crops found</div>\n        ) : (\n          crops.map(crop => (\n            <div key={crop.id} className=\"crop-card\">\n              <div className=\"crop-info\">\n                <h4>{crop.cropName}</h4>\n                <p className=\"variety\">Variety: {crop.variety}</p>\n                <p className=\"area\">Area: {crop.area} acres</p>\n                <p className=\"season\">Season: {crop.season}</p>\n                <p className=\"status\">Status: {crop.status}</p>\n              </div>\n              <div className=\"crop-actions\">\n                <button className=\"btn btn-secondary btn-sm\">Edit</button>\n                <button className=\"btn btn-warning btn-sm\">Update Status</button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FPOCrops;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}