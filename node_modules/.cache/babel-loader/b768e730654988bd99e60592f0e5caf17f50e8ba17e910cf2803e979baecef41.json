{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ActionDropdown=_ref=>{let{actions,customActions,item,onEdit,onDelete,onView}=_ref;const[isOpen,setIsOpen]=useState(false);const dropdownRef=useRef(null);// Close dropdown when clicking outside\nuseEffect(()=>{const handleClickOutside=event=>{if(dropdownRef.current&&!dropdownRef.current.contains(event.target)){setIsOpen(false);}};document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[]);const handleActionClick=action=>{if(action.onClick&&item){action.onClick(item);}setIsOpen(false);};// Build actions array from all available sources\nconst allActions=[];// Add custom actions if provided\nif(customActions&&Array.isArray(customActions)){allActions.push(...customActions);}// Add actions if provided\nif(actions&&Array.isArray(actions)){allActions.push(...actions);}// Add built-in actions if provided\nif(onView){allActions.push({label:'View',icon:'👁️',className:'info',onClick:()=>onView(item)});}if(onEdit){allActions.push({label:'Edit',icon:'✏️',className:'primary',onClick:()=>onEdit(item)});}if(onDelete){allActions.push({label:'Delete',icon:'🗑️',className:'danger',onClick:()=>onDelete(item)});}return/*#__PURE__*/_jsxs(\"div\",{className:\"action-dropdown\",ref:dropdownRef,children:[/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-toggle\",onClick:()=>setIsOpen(!isOpen),\"aria-label\":\"Actions\",children:\"\\u22EF\"}),isOpen&&allActions.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-menu\",children:allActions.map((action,index)=>{// Check if action should be shown based on condition\nif(action.showCondition&&item&&!action.showCondition(item)){return null;}return/*#__PURE__*/_jsxs(\"button\",{className:\"dropdown-item \".concat(action.className||''),onClick:()=>handleActionClick(action),children:[action.icon&&/*#__PURE__*/_jsx(\"span\",{className:\"action-icon\",children:action.icon}),action.label]},index);})})]});};export default ActionDropdown;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","ActionDropdown","_ref","actions","customActions","item","onEdit","onDelete","onView","isOpen","setIsOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleActionClick","action","onClick","allActions","Array","isArray","push","label","icon","className","ref","children","length","map","index","showCondition","concat"],"sources":["C:/karthik cc/date-frontend/src/components/ActionDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst ActionDropdown = ({ actions, customActions, item, onEdit, onDelete, onView }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.onClick && item) {\r\n      action.onClick(item);\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Build actions array from all available sources\r\n  const allActions = [];\r\n  \r\n  // Add custom actions if provided\r\n  if (customActions && Array.isArray(customActions)) {\r\n    allActions.push(...customActions);\r\n  }\r\n  \r\n  // Add actions if provided\r\n  if (actions && Array.isArray(actions)) {\r\n    allActions.push(...actions);\r\n  }\r\n  \r\n  // Add built-in actions if provided\r\n  if (onView) {\r\n    allActions.push({\r\n      label: 'View',\r\n      icon: '👁️',\r\n      className: 'info',\r\n      onClick: () => onView(item)\r\n    });\r\n  }\r\n  \r\n  if (onEdit) {\r\n    allActions.push({\r\n      label: 'Edit',\r\n      icon: '✏️',\r\n      className: 'primary',\r\n      onClick: () => onEdit(item)\r\n    });\r\n  }\r\n  \r\n  if (onDelete) {\r\n    allActions.push({\r\n      label: 'Delete',\r\n      icon: '🗑️',\r\n      className: 'danger',\r\n      onClick: () => onDelete(item)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"action-dropdown\" ref={dropdownRef}>\r\n      <button\r\n        className=\"dropdown-toggle\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        aria-label=\"Actions\"\r\n      >\r\n        ⋯\r\n      </button>\r\n      \r\n      {isOpen && allActions.length > 0 && (\r\n        <div className=\"dropdown-menu\">\r\n          {allActions.map((action, index) => {\r\n            // Check if action should be shown based on condition\r\n            if (action.showCondition && item && !action.showCondition(item)) {\r\n              return null;\r\n            }\r\n            \r\n            return (\r\n              <button\r\n                key={index}\r\n                className={`dropdown-item ${action.className || ''}`}\r\n                onClick={() => handleActionClick(action)}\r\n              >\r\n                {action.icon && <span className=\"action-icon\">{action.icon}</span>}\r\n                {action.label}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDropdown; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgE,IAA/D,CAAEC,OAAO,CAAEC,aAAa,CAAEC,IAAI,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,MAAO,CAAC,CAAAN,IAAA,CAChF,KAAM,CAACO,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAAiB,WAAW,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAIhC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,kBAAkB,CAAIC,KAAK,EAAK,CACpC,GAAIF,WAAW,CAACG,OAAO,EAAI,CAACH,WAAW,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,CAAE,CACtEN,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAEDO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAEN,kBAAkB,CAAC,CAC1D,MAAO,IAAM,CACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAEP,kBAAkB,CAAC,CAC/D,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,iBAAiB,CAAIC,MAAM,EAAK,CACpC,GAAIA,MAAM,CAACC,OAAO,EAAIjB,IAAI,CAAE,CAC1BgB,MAAM,CAACC,OAAO,CAACjB,IAAI,CAAC,CACtB,CACAK,SAAS,CAAC,KAAK,CAAC,CAClB,CAAC,CAED;AACA,KAAM,CAAAa,UAAU,CAAG,EAAE,CAErB;AACA,GAAInB,aAAa,EAAIoB,KAAK,CAACC,OAAO,CAACrB,aAAa,CAAC,CAAE,CACjDmB,UAAU,CAACG,IAAI,CAAC,GAAGtB,aAAa,CAAC,CACnC,CAEA;AACA,GAAID,OAAO,EAAIqB,KAAK,CAACC,OAAO,CAACtB,OAAO,CAAC,CAAE,CACrCoB,UAAU,CAACG,IAAI,CAAC,GAAGvB,OAAO,CAAC,CAC7B,CAEA;AACA,GAAIK,MAAM,CAAE,CACVe,UAAU,CAACG,IAAI,CAAC,CACdC,KAAK,CAAE,MAAM,CACbC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,MAAM,CACjBP,OAAO,CAAEA,CAAA,GAAMd,MAAM,CAACH,IAAI,CAC5B,CAAC,CAAC,CACJ,CAEA,GAAIC,MAAM,CAAE,CACViB,UAAU,CAACG,IAAI,CAAC,CACdC,KAAK,CAAE,MAAM,CACbC,IAAI,CAAE,IAAI,CACVC,SAAS,CAAE,SAAS,CACpBP,OAAO,CAAEA,CAAA,GAAMhB,MAAM,CAACD,IAAI,CAC5B,CAAC,CAAC,CACJ,CAEA,GAAIE,QAAQ,CAAE,CACZgB,UAAU,CAACG,IAAI,CAAC,CACdC,KAAK,CAAE,QAAQ,CACfC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,QAAQ,CACnBP,OAAO,CAAEA,CAAA,GAAMf,QAAQ,CAACF,IAAI,CAC9B,CAAC,CAAC,CACJ,CAEA,mBACEL,KAAA,QAAK6B,SAAS,CAAC,iBAAiB,CAACC,GAAG,CAAEnB,WAAY,CAAAoB,QAAA,eAChDjC,IAAA,WACE+B,SAAS,CAAC,iBAAiB,CAC3BP,OAAO,CAAEA,CAAA,GAAMZ,SAAS,CAAC,CAACD,MAAM,CAAE,CAClC,aAAW,SAAS,CAAAsB,QAAA,CACrB,QAED,CAAQ,CAAC,CAERtB,MAAM,EAAIc,UAAU,CAACS,MAAM,CAAG,CAAC,eAC9BlC,IAAA,QAAK+B,SAAS,CAAC,eAAe,CAAAE,QAAA,CAC3BR,UAAU,CAACU,GAAG,CAAC,CAACZ,MAAM,CAAEa,KAAK,GAAK,CACjC;AACA,GAAIb,MAAM,CAACc,aAAa,EAAI9B,IAAI,EAAI,CAACgB,MAAM,CAACc,aAAa,CAAC9B,IAAI,CAAC,CAAE,CAC/D,MAAO,KAAI,CACb,CAEA,mBACEL,KAAA,WAEE6B,SAAS,kBAAAO,MAAA,CAAmBf,MAAM,CAACQ,SAAS,EAAI,EAAE,CAAG,CACrDP,OAAO,CAAEA,CAAA,GAAMF,iBAAiB,CAACC,MAAM,CAAE,CAAAU,QAAA,EAExCV,MAAM,CAACO,IAAI,eAAI9B,IAAA,SAAM+B,SAAS,CAAC,aAAa,CAAAE,QAAA,CAAEV,MAAM,CAACO,IAAI,CAAO,CAAC,CACjEP,MAAM,CAACM,KAAK,GALRO,KAMC,CAAC,CAEb,CAAC,CAAC,CACC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}